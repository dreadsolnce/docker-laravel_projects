#version: ""
services:
    app:
      build:
        dockerfile: ${APP_NAME}_Dockerfile
        context: ./dockerfile
      container_name: ${APP_NAME}-app
      hostname: php
      working_dir: /var/www
      environment:
        - DB_CONNECTION=pgsql
        - DB_HOST=postgres
        - DB_PORT=5432
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
        - DB_DATABASE=${DB_DATABASE}
      volumes:
        - ./application/${APP_NAME}:/var/www
        - ./sourcefiles/php-fpm/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
        - ./sourcefiles/php-fpm/php-fpm.conf:/etc/php-fpm.d/php-fpm.conf
        - ${DIR_MUSIC:-/dev/null}:/music
      networks:
        net:
          ipv4_address: 172.28.1.4
      command: supervisord -c /etc/supervisor/conf.d/supervisord.conf

    webserver:
      image: nginx:alpine
      container_name: ${APP_NAME}-webserver
      hostname: nginx
      working_dir: /var/www
      volumes:
        - ./application/${APP_NAME}:/var/www
        - ./sourcefiles/nginx/:/etc/nginx/conf.d/
      ports:
        - "80:80"
      networks:
        net:
          ipv4_address: 172.28.1.3

    postgres:
      image: postgres:9.5-alpine
      container_name: ${APP_NAME}-postgres
      hostname: postgres
      volumes:
          - ./data/${APP_NAME}/postgres.data:/var/lib/postgresql/data
      environment:
        - POSTGRES_USER=${DB_USERNAME}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
        - POSTGRES_DB=${DB_DATABASE}
      ports:
       - "5432:5432"
      networks:
        net:
          ipv4_address: 172.28.1.2
      healthcheck:
        test: [ "CMD-SHELL", 'pg_isready -U "${DB_USERNAME}" -d "${DB_DATABASE}"' ]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
      restart: unless-stopped

    redis:
      image: redis:alpine
      container_name: ${APP_NAME}-redis
      hostname: redis
      ports:
        - "6379:6379"
      networks:
        net:
          ipv4_address: 172.28.1.5

    rabbitmq:
      image: rabbitmq:3-management-alpine
      container_name: ${APP_NAME}-rabbitmq
      hostname: rabbit
      environment:
        - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
        - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
        - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}]
      ports:
        - "5672:5672"
        - "15672:15672"
      volumes:
        - ./sourcefiles/rabbitmq/management_agent.disable_metrics_collector.conf:/etc/rabbitmq/conf.d/management_agent.disable_metrics_collector.conf
        - ./data/${APP_NAME}/rabbitmq-data:/var/lib/rabbitmq/
      networks:
        net:
          ipv4_address: 172.28.1.6

networks:
    net:
      name: ${APP_NAME}_net
      driver: bridge
      ipam:
#        driver: default
        config:
            - subnet: 172.28.0.0/16
